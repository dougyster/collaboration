{"ast":null,"code":"var _jsxFileName = \"/Users/doug/collaboration/client/src/components/DocumentEditor.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport apiClient from '../services/ApiClient';\nimport { useAuth } from '../context/AuthContext';\nimport axios from 'axios';\n\n// Custom hook for polling document changes\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction useDocumentPolling(documentId, username, initialLastEdited, onDocumentChanged) {\n  _s();\n  const [lastPolled, setLastPolled] = useState(null);\n  const pollingIntervalRef = useRef(null);\n  const isPollingRef = useRef(false);\n\n  // Start polling for changes\n  useEffect(() => {\n    if (!documentId || !username) return;\n    const pollForChanges = async () => {\n      if (isPollingRef.current) return; // Prevent overlapping polls\n\n      try {\n        isPollingRef.current = true;\n        const response = await apiClient.getDocument(documentId);\n        if (response.data.success) {\n          const doc = response.data.document;\n          const currentLastEdited = new Date(doc.last_edited).getTime();\n          const previousLastEdited = lastPolled || initialLastEdited;\n\n          // If the document has been updated since our last check\n          if (currentLastEdited > previousLastEdited) {\n            console.log('Document changed, fetching updates...');\n            onDocumentChanged(doc);\n          }\n          setLastPolled(currentLastEdited);\n        }\n      } catch (error) {\n        console.error('Error polling document:', error);\n      } finally {\n        isPollingRef.current = false;\n      }\n    };\n\n    // Poll every 5 seconds\n    pollingIntervalRef.current = setInterval(pollForChanges, 5000);\n\n    // Initial poll\n    pollForChanges();\n\n    // Cleanup on unmount\n    return () => {\n      if (pollingIntervalRef.current) {\n        clearInterval(pollingIntervalRef.current);\n      }\n    };\n  }, [documentId, initialLastEdited, onDocumentChanged, lastPolled]);\n  return {\n    lastPolled\n  };\n}\n_s(useDocumentPolling, \"cpnQ3DFQTuQwG0lhfBXji7siDyc=\");\nfunction DocumentEditor() {\n  _s2();\n  const [document, setDocument] = useState(null);\n  const [content, setContent] = useState('');\n  const [title, setTitle] = useState('');\n  const [baseContent, setBaseContent] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [saving, setSaving] = useState(false);\n  const [error, setError] = useState('');\n  const [message, setMessage] = useState('');\n  const [editingTitle, setEditingTitle] = useState(false);\n  const [initialLastEdited, setInitialLastEdited] = useState(null);\n  const [isUserTyping, setIsUserTyping] = useState(false);\n  const {\n    documentId\n  } = useParams();\n  const {\n    user\n  } = useAuth();\n  const navigate = useNavigate();\n  const saveTimeoutRef = useRef(null);\n  const userEditingRef = useRef(false);\n  useEffect(() => {\n    fetchDocument();\n  }, [fetchDocument]);\n\n  // Handle document changes from other users\n  const handleDocumentChanged = React.useCallback(updatedDoc => {\n    // Only update if the user isn't actively typing\n    if (!userEditingRef.current) {\n      setDocument(updatedDoc);\n      setContent(updatedDoc.data);\n      setBaseContent(updatedDoc.data);\n      setTitle(updatedDoc.title);\n\n      // Show a notification\n      setMessage('Document was updated by another user');\n      setTimeout(() => setMessage(''), 3000);\n    } else {\n      // If user is typing, just update the base content for the next merge\n      setBaseContent(updatedDoc.data);\n\n      // Show a notification that there are changes\n      setMessage('Document was updated by another user. Your changes will be merged when you stop typing.');\n      setTimeout(() => setMessage(''), 5000);\n    }\n  }, []);\n\n  // Use our polling hook with explicit username\n  useDocumentPolling(documentId, user === null || user === void 0 ? void 0 : user.username,\n  // Pass username explicitly\n  initialLastEdited, handleDocumentChanged);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (saveTimeoutRef.current) {\n        clearTimeout(saveTimeoutRef.current);\n      }\n    };\n  }, []);\n  const fetchDocument = React.useCallback(async () => {\n    if (!user) return; // Don't fetch if no user\n\n    try {\n      setLoading(true);\n      const response = await apiClient.getDocument(documentId);\n      if (response.data.success) {\n        const doc = response.data.document;\n        setDocument(doc);\n        setContent(doc.data);\n        setBaseContent(doc.data);\n        setTitle(doc.title);\n\n        // Set initial last edited timestamp for polling\n        const lastEditedTimestamp = new Date(doc.last_edited).getTime();\n        setInitialLastEdited(lastEditedTimestamp);\n      } else {\n        setError('Failed to fetch document');\n      }\n    } catch (err) {\n      setError('Error fetching document. Please try again.');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  }, [documentId, user]);\n  const handleContentChange = e => {\n    setContent(e.target.value);\n\n    // Mark that user is actively typing\n    userEditingRef.current = true;\n    setIsUserTyping(true);\n\n    // Debounce save to avoid too many API calls\n    if (saveTimeoutRef.current) {\n      clearTimeout(saveTimeoutRef.current);\n    }\n    saveTimeoutRef.current = setTimeout(() => {\n      saveDocument(e.target.value);\n      // Mark that user has stopped typing after save\n      userEditingRef.current = false;\n      setIsUserTyping(false);\n    }, 1000); // Save after 1 second of inactivity\n  };\n  const saveDocument = async newContent => {\n    if (!user) return; // Don't save if no user\n\n    try {\n      setSaving(true);\n      setMessage('');\n      setError('');\n      const response = await axios.put(`/api/documents/${documentId}/content`, {\n        content: newContent,\n        base_content: baseContent,\n        username: user.username // Explicitly pass the username\n      }, {\n        withCredentials: true\n      });\n      if (response.data.success) {\n        setMessage('Document saved');\n        setBaseContent(response.data.content); // Update base content for future merges\n\n        // If the content was modified during merge, update the editor\n        if (response.data.content !== newContent) {\n          setContent(response.data.content);\n        }\n      } else {\n        setError(response.data.message);\n      }\n    } catch (err) {\n      setError('Failed to save document. Please try again.');\n      console.error(err);\n    } finally {\n      setSaving(false);\n\n      // Clear message after 3 seconds\n      setTimeout(() => {\n        setMessage('');\n      }, 3000);\n    }\n  };\n  const handleTitleChange = async () => {\n    if (!title.trim()) {\n      setTitle(document.title);\n      setEditingTitle(false);\n      return;\n    }\n    if (title === document.title) {\n      setEditingTitle(false);\n      return;\n    }\n    try {\n      const response = await axios.put(`/api/documents/${documentId}/title`, {\n        title\n      }, {\n        withCredentials: true\n      });\n      if (!response.data.success) {\n        setError(response.data.message);\n        setTitle(document.title);\n      }\n    } catch (err) {\n      setError('Failed to update title. Please try again.');\n      setTitle(document.title);\n      console.error(err);\n    } finally {\n      setEditingTitle(false);\n    }\n  };\n  const handleTitleKeyDown = e => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      handleTitleChange();\n    } else if (e.key === 'Escape') {\n      e.preventDefault();\n      setTitle(document.title);\n      setEditingTitle(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-container\",\n      children: \"Loading document...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 12\n    }, this);\n  }\n  if (!document) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-container\",\n      children: \"Document not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editor-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-header\",\n      children: [editingTitle ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        onBlur: handleTitleChange,\n        onKeyDown: handleTitleKeyDown,\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"editor-title\",\n        onClick: () => setEditingTitle(true),\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: () => navigate('/dashboard'),\n          children: \"Back to Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 17\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-success\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-meta mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-muted\",\n            children: [\"Last edited: \", new Date(document.last_edited).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-muted\",\n            children: [\"Shared with: \", document.users.filter(u => u !== user.username).join(', ') || 'No one']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sync-status\",\n          children: isUserTyping ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-badge editing\",\n            children: \"Editing...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this) : saving ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-badge saving\",\n            children: \"Saving...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-badge synced\",\n            children: \"Synced\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"editor-content\",\n      value: content,\n      onChange: handleContentChange,\n      placeholder: \"Start typing your document content here...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this), saving && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-muted mt-3\",\n      children: \"Saving...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 5\n  }, this);\n}\n_s2(DocumentEditor, \"IAYhovXfk/O5l25AZYNW+1hk7vQ=\", false, function () {\n  return [useParams, useAuth, useNavigate, useDocumentPolling];\n});\n_c = DocumentEditor;\nexport default DocumentEditor;\nvar _c;\n$RefreshReg$(_c, \"DocumentEditor\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useNavigate","apiClient","useAuth","axios","jsxDEV","_jsxDEV","useDocumentPolling","documentId","username","initialLastEdited","onDocumentChanged","_s","lastPolled","setLastPolled","pollingIntervalRef","isPollingRef","pollForChanges","current","response","getDocument","data","success","doc","document","currentLastEdited","Date","last_edited","getTime","previousLastEdited","console","log","error","setInterval","clearInterval","DocumentEditor","_s2","setDocument","content","setContent","title","setTitle","baseContent","setBaseContent","loading","setLoading","saving","setSaving","setError","message","setMessage","editingTitle","setEditingTitle","setInitialLastEdited","isUserTyping","setIsUserTyping","user","navigate","saveTimeoutRef","userEditingRef","fetchDocument","handleDocumentChanged","useCallback","updatedDoc","setTimeout","clearTimeout","lastEditedTimestamp","err","handleContentChange","e","target","value","saveDocument","newContent","put","base_content","withCredentials","handleTitleChange","trim","handleTitleKeyDown","key","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onBlur","onKeyDown","autoFocus","onClick","toLocaleString","users","filter","u","join","placeholder","_c","$RefreshReg$"],"sources":["/Users/doug/collaboration/client/src/components/DocumentEditor.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport apiClient from '../services/ApiClient';\nimport { useAuth } from '../context/AuthContext';\nimport axios from 'axios';\n\n// Custom hook for polling document changes\nfunction useDocumentPolling(documentId, username, initialLastEdited, onDocumentChanged) {\n  const [lastPolled, setLastPolled] = useState(null);\n  const pollingIntervalRef = useRef(null);\n  const isPollingRef = useRef(false);\n  \n  // Start polling for changes\n  useEffect(() => {\n    if (!documentId || !username) return;\n    \n    const pollForChanges = async () => {\n      if (isPollingRef.current) return; // Prevent overlapping polls\n      \n      try {\n        isPollingRef.current = true;\n        const response = await apiClient.getDocument(documentId);\n        \n        if (response.data.success) {\n          const doc = response.data.document;\n          const currentLastEdited = new Date(doc.last_edited).getTime();\n          const previousLastEdited = lastPolled || initialLastEdited;\n          \n          // If the document has been updated since our last check\n          if (currentLastEdited > previousLastEdited) {\n            console.log('Document changed, fetching updates...');\n            onDocumentChanged(doc);\n          }\n          \n          setLastPolled(currentLastEdited);\n        }\n      } catch (error) {\n        console.error('Error polling document:', error);\n      } finally {\n        isPollingRef.current = false;\n      }\n    };\n    \n    // Poll every 5 seconds\n    pollingIntervalRef.current = setInterval(pollForChanges, 5000);\n    \n    // Initial poll\n    pollForChanges();\n    \n    // Cleanup on unmount\n    return () => {\n      if (pollingIntervalRef.current) {\n        clearInterval(pollingIntervalRef.current);\n      }\n    };\n  }, [documentId, initialLastEdited, onDocumentChanged, lastPolled]);\n  \n  return { lastPolled };\n}\n\nfunction DocumentEditor() {\n  const [document, setDocument] = useState(null);\n  const [content, setContent] = useState('');\n  const [title, setTitle] = useState('');\n  const [baseContent, setBaseContent] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [saving, setSaving] = useState(false);\n  const [error, setError] = useState('');\n  const [message, setMessage] = useState('');\n  const [editingTitle, setEditingTitle] = useState(false);\n  const [initialLastEdited, setInitialLastEdited] = useState(null);\n  const [isUserTyping, setIsUserTyping] = useState(false);\n  \n  const { documentId } = useParams();\n  const { user } = useAuth();\n  const navigate = useNavigate();\n  const saveTimeoutRef = useRef(null);\n  const userEditingRef = useRef(false);\n\n  useEffect(() => {\n    fetchDocument();\n  }, [fetchDocument]);\n  \n  // Handle document changes from other users\n  const handleDocumentChanged = React.useCallback((updatedDoc) => {\n    // Only update if the user isn't actively typing\n    if (!userEditingRef.current) {\n      setDocument(updatedDoc);\n      setContent(updatedDoc.data);\n      setBaseContent(updatedDoc.data);\n      setTitle(updatedDoc.title);\n      \n      // Show a notification\n      setMessage('Document was updated by another user');\n      setTimeout(() => setMessage(''), 3000);\n    } else {\n      // If user is typing, just update the base content for the next merge\n      setBaseContent(updatedDoc.data);\n      \n      // Show a notification that there are changes\n      setMessage('Document was updated by another user. Your changes will be merged when you stop typing.');\n      setTimeout(() => setMessage(''), 5000);\n    }\n  }, []);\n  \n  // Use our polling hook with explicit username\n  useDocumentPolling(\n    documentId,\n    user?.username, // Pass username explicitly\n    initialLastEdited,\n    handleDocumentChanged\n  );\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (saveTimeoutRef.current) {\n        clearTimeout(saveTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  const fetchDocument = React.useCallback(async () => {\n    if (!user) return; // Don't fetch if no user\n    \n    try {\n      setLoading(true);\n      const response = await apiClient.getDocument(documentId);\n      \n      if (response.data.success) {\n        const doc = response.data.document;\n        setDocument(doc);\n        setContent(doc.data);\n        setBaseContent(doc.data);\n        setTitle(doc.title);\n        \n        // Set initial last edited timestamp for polling\n        const lastEditedTimestamp = new Date(doc.last_edited).getTime();\n        setInitialLastEdited(lastEditedTimestamp);\n      } else {\n        setError('Failed to fetch document');\n      }\n    } catch (err) {\n      setError('Error fetching document. Please try again.');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  }, [documentId, user]);\n\n  const handleContentChange = (e) => {\n    setContent(e.target.value);\n    \n    // Mark that user is actively typing\n    userEditingRef.current = true;\n    setIsUserTyping(true);\n    \n    // Debounce save to avoid too many API calls\n    if (saveTimeoutRef.current) {\n      clearTimeout(saveTimeoutRef.current);\n    }\n    \n    saveTimeoutRef.current = setTimeout(() => {\n      saveDocument(e.target.value);\n      // Mark that user has stopped typing after save\n      userEditingRef.current = false;\n      setIsUserTyping(false);\n    }, 1000); // Save after 1 second of inactivity\n  };\n\n  const saveDocument = async (newContent) => {\n    if (!user) return; // Don't save if no user\n    \n    try {\n      setSaving(true);\n      setMessage('');\n      setError('');\n      \n      const response = await axios.put(`/api/documents/${documentId}/content`, {\n        content: newContent,\n        base_content: baseContent,\n        username: user.username // Explicitly pass the username\n      }, { withCredentials: true });\n      \n      if (response.data.success) {\n        setMessage('Document saved');\n        setBaseContent(response.data.content); // Update base content for future merges\n        \n        // If the content was modified during merge, update the editor\n        if (response.data.content !== newContent) {\n          setContent(response.data.content);\n        }\n      } else {\n        setError(response.data.message);\n      }\n    } catch (err) {\n      setError('Failed to save document. Please try again.');\n      console.error(err);\n    } finally {\n      setSaving(false);\n      \n      // Clear message after 3 seconds\n      setTimeout(() => {\n        setMessage('');\n      }, 3000);\n    }\n  };\n\n  const handleTitleChange = async () => {\n    if (!title.trim()) {\n      setTitle(document.title);\n      setEditingTitle(false);\n      return;\n    }\n    \n    if (title === document.title) {\n      setEditingTitle(false);\n      return;\n    }\n    \n    try {\n      const response = await axios.put(`/api/documents/${documentId}/title`, {\n        title\n      }, { withCredentials: true });\n      \n      if (!response.data.success) {\n        setError(response.data.message);\n        setTitle(document.title);\n      }\n    } catch (err) {\n      setError('Failed to update title. Please try again.');\n      setTitle(document.title);\n      console.error(err);\n    } finally {\n      setEditingTitle(false);\n    }\n  };\n\n  const handleTitleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      handleTitleChange();\n    } else if (e.key === 'Escape') {\n      e.preventDefault();\n      setTitle(document.title);\n      setEditingTitle(false);\n    }\n  };\n\n  if (loading) {\n    return <div className=\"editor-container\">Loading document...</div>;\n  }\n\n  if (!document) {\n    return <div className=\"editor-container\">Document not found</div>;\n  }\n\n  return (\n    <div className=\"editor-container\">\n      <div className=\"editor-header\">\n        {editingTitle ? (\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            onBlur={handleTitleChange}\n            onKeyDown={handleTitleKeyDown}\n            autoFocus\n          />\n        ) : (\n          <h2 className=\"editor-title\" onClick={() => setEditingTitle(true)}>\n            {title}\n          </h2>\n        )}\n        <div className=\"editor-actions\">\n          <button \n            className=\"btn btn-secondary\"\n            onClick={() => navigate('/dashboard')}\n          >\n            Back to Dashboard\n          </button>\n        </div>\n      </div>\n      \n      {error && <div className=\"alert alert-danger\">{error}</div>}\n      {message && <div className=\"alert alert-success\">{message}</div>}\n      \n      <div className=\"editor-meta mb-3\">\n        <div className=\"flex justify-between items-center\">\n          <div>\n            <p className=\"text-muted\">\n              Last edited: {new Date(document.last_edited).toLocaleString()}\n            </p>\n            <p className=\"text-muted\">\n              Shared with: {document.users.filter(u => u !== user.username).join(', ') || 'No one'}\n            </p>\n          </div>\n          <div className=\"sync-status\">\n            {isUserTyping ? (\n              <span className=\"status-badge editing\">Editing...</span>\n            ) : saving ? (\n              <span className=\"status-badge saving\">Saving...</span>\n            ) : (\n              <span className=\"status-badge synced\">Synced</span>\n            )}\n          </div>\n        </div>\n      </div>\n      \n      <textarea\n        className=\"editor-content\"\n        value={content}\n        onChange={handleContentChange}\n        placeholder=\"Start typing your document content here...\"\n      />\n      \n      {saving && <p className=\"text-muted mt-3\">Saving...</p>}\n    </div>\n  );\n}\n\nexport default DocumentEditor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}